<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Fanlz's Blog]]></title>
  <subtitle><![CDATA[JUST DO FE !]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://fanlz.com/"/>
  <updated>2016-10-30T12:57:07.000Z</updated>
  <id>http://fanlz.com/</id>
  
  <author>
    <name><![CDATA[Fanlz]]></name>
    <email><![CDATA[fanlzcn@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[“习核心”正式登场]]></title>
    <link href="http://fanlz.com/2016/10/30/xi/"/>
    <id>http://fanlz.com/2016/10/30/xi/</id>
    <published>2016-10-30T12:57:07.000Z</published>
    <updated>2016-10-30T12:57:07.000Z</updated>
    <content type="html"><![CDATA[<p>【大纪元2016年10月27日讯】编者按：中共十八届六中全会10月27日在北京闭幕，会议公报首次以“核心”形容习近平的领导，意味着习核心正式确立、习核心时代来临。下文是大纪元2016年2月16日发表的，关于江泽民、胡锦涛、习近平的“核心”之争以及“习核心”出台的内幕。此文并预测“习核心”在六中全会正式登场，现在果如其言。</p>
<p>（大纪元记者郭惠报导）继邓小平、江泽民后，近期，中共党报上再次密集出现“核心”一词。目前，大陆已有十多个省市委书记表态提到“习核心”，其中包括天津、四川、广西、安徽、湖北、内蒙古、河北、辽宁、重庆、山东、江苏、海南、河南、贵州、西藏等省市委书记。</p>
<p>有关“核心论”的说法于1989年春夏之交在中共内部一定范围内出现，最早由邓小平提出。</p>
<p>“核心”在中共语境中，意味着个人最高权力的确认。</p>
<p>江泽民在“六四”后掌权，一开始“核心”的提法并不常见，但在其快退下前的2、3年间，中共突然开始大幅宣传“江核心”；而到了胡锦涛掌权时期，江泽民禁止媒体提“胡核心”；到了今天，“习核心”的提法再次密集出现。</p>
<p>一、胡锦涛未获“核心”称号 隐藏巨大秘密<br>“胡核心”在过去十多年间不存在的原因，一直隐藏着一个大秘密，这也牵涉到中共多年来绕不过去的法轮功问题。</p>
<p>邓小平借军权与陈云摊牌“核心”说法<br>文革后，从邓小平到江泽民，从“十三大”到“十七大”，中共内部一直有一个“秘密决议”，即从最初的中共内部“重大问题最终由邓小平掌舵”，到后继的“重大问题要向江泽民请示”。据说，这些都是在当事人邓、江退下时，在政治局内秘密通过的。这个“秘密决议”在中共内部流传了30多年。</p>
<p>当年邓小平复出后，依靠绝对的军权，向与其唱反调的中共八老之一的陈云摊牌。邓正式向陈提出“核心论”，即中共只能有一个“核心”，对于若干重大政治问题只能有一个声音。</p>
<p>1987年十三届一中全会上，赵紫阳是总书记，邓小平留任军委主席。在邓的授意下，五大常委赵紫阳、李鹏、乔石、胡启立、姚依林，一致举手通过中共内部“重大问题最终由邓小平掌舵”的秘密决议。</p>
<p>邓小平提出“核心”论 江很长时间无大权<br>1989年6月16日，即“六四”事件发生后的第12天，邓小平和杨尚昆、万里、江泽民、李鹏、乔石、姚依林、宋平、李瑞环等中共新领导人会见时说：“任何一个领导集体都要有一个‘核心’，没有‘核心’的领导是靠不住的。”（《邓小平文选》第三卷，1993年11月2日在中国公开发行）。</p>
<p>在那次会谈中，邓小平正式提出了“核心”的概念，并称，第一代“核心”是毛，第二代是他自己，第三代是江。</p>
<p>那年的“六四”事件让邓小平无奈下接受了江泽民接替赵紫阳。但邓对江一直不放心，看出江的机会主义本质。为防范江日后独揽大权，邓小平虽然在当年11月卸任了军委主席，但是仍用了“秘密决议”的特权，在中共“十四大”上买了个“双重保险”：一是隔代指定胡锦涛为第四代接班人，废掉了江的立储权；二是将超龄军头刘华清推上常委的位置，配合同为军委副主席的张震，一路“持枪”监军，直到胡锦涛顺利上台。</p>
<p>最初的那些年，没有站稳脚跟的江泽民一直不敢妄动。直到1992年，邓以中共普通党员身份南巡时，展示的却还是“核心”的影响力。</p>
<p>邓小平死后 江迅速抛“核心论”<br>1993年12月，邓小平在上海杨浦大桥上露面，接着在中国新年除夕时出现在电视上，这是邓去世前的最后一次公开露面，当时邓小平已显衰老的神情。</p>
<p>1997年2月19日，邓小平病逝。邓死后，江泽民的人马迅即以“中共中央、全国人大常委会、国务院、全国政协和中央军事委员会”的名义发表了《告全党全军全国各族人民书》，提出了以“江泽民为核心的党中央”。</p>
<p>镇压法轮功后 江反复强调“核心”<br>江泽民真正大提特提“核心论”是在1999年7月后。当年11月，江泽民在和军方高层谈话时，突然强调他的“核心”作用，并在讲话中称，中共“必须有一个核心，这是一条历史规律”。</p>
<p>江还特别强调，他的“核心”是邓小平决定的；2000年1月，他又向中央政治局解释：“我从来认为，领导‘核心’不是自封的，需要在斗争实践中来形成、考验和锻练。”</p>
<p>江泽民为何突然在1999年11月以后大张旗鼓地宣传其“核心”地位？</p>
<p>这要从同一年，中国发生的一件震惊中外的大事说起。</p>
<p>1999年7月20日，江泽民一意孤行发起对法轮功的镇压，但当时很不得人心。江泽民的“军师”曾庆红在3个月后曾对江泽民说：“现在从常委、政治局委员到各级党组织，对镇压都很消极。我建议，第一、各地实行‘一把手’负责制，各地如有上访的法轮功超过一定数量的，‘一把手’撤职；第二、上访人员中山东来的几乎最多，告诉吴官正，如果再有上访人员就撤销他省委书记和政治局委员的职务，如果镇压得力，可以考虑他在‘十六大’上当政治局常委；第三、胡锦涛的态度很暧昧，原来我们选定的第五代领导人李长春在广东的镇压，也很不得力。我们必须采取措施。”</p>
<p>也有说法指，1999年，当时政治局常委在开会时，胡锦涛、朱镕基等都对江镇压法轮功的提议投了反对票。江对此很恼火。</p>
<p>随后，江泽民一方面开始用利益诱惑想要升官发财的各地官员跟随其迫害法轮功；另一方面开始大幅推出“核心论”的说法，旨在威胁各方“诸侯”在重大政治问题上只能听一个声音。</p>
<p>时事评论员李林一分析说，1999年，江泽民不余遗力地镇压法轮功，致使中共内部分裂、危机四伏。为了保住权力，江开始花大力气抛出“核心论”，目的也是要所有高层官员听从他发号施令，行动一致参与迫害法轮功。</p>
<p>此后，在中共官方表述里，很多用的是“以江泽民为核心的党中央”。</p>
<p>到了“十六大”胡锦涛接替江掌权后，“胡核心”的说法至今没有在中共内部正式见诸。中共官方统一的说法是“以胡锦涛为总书记的党中央”。</p>
<p>乔石透露邓小平内部指定胡锦涛为第四代“核心”<br>由于1989年以后江泽民和邓小平存在一些中共内部的恩怨，而胡锦涛是邓小平指定的江之后的中共总书记，再加上法轮功问题上双方看法不同，使得江根本容不下胡锦涛。</p>
<p>中共“十五大”人事安排上，薄一波以70岁为死线劝退乔石，而71岁的江泽民却仍留在了“核心”的位置上。</p>
<p>乔石临退前，公开透露了一个消息：胡锦涛为第四代“核心”，是邓小平和中央政治局常委、政治局委员等所作的安排，并形成了中共内部的决议。乔石、李瑞环和万里等人，在不同场合不约而同地公开了这些内容。</p>
<p>有评论认为，他们爆出这一内幕的目的，就是向中共党内昭示这一合法性，并说明任何企图推翻这个决议的做法，都是非法的。如果江要废黜胡锦涛，就等于是背叛邓小平的旨意。江也不敢随便违背。因此乔、李、万等于把邓小平当成规定江下台的定时炸弹。</p>
<p>乔石、李瑞环等在退休之前的一系列动作，使江只能在邓小平所建立的规则下运转。江虽然最后不得不让胡锦涛掌权，却架空了胡。这其中，“核心”的称号就是双方争斗的焦点之一。</p>
<p>“十七大”没有“胡核心” 的内幕<br>自胡锦涛2002年执政以来，因为江泽民、曾庆红的直接干政，使得胡、温处于“令不出中南海”的状态。在江泽民2004年从中共军委主席最终退下后，曾庆红仍然运用其国家副主席权力和以前在中央书记处的关系，公开牵制胡、温执政。</p>
<p>胡锦涛几次险遭江泽民的暗杀。胡在2006年对江泽民的隔代接班人、时任上海市委书记陈良宇动手，拿下了陈。此后，江泽民力保曾庆红留任“十七大”，但那时胡锦涛已下定决心，要将曾在“十七大”赶下台。</p>
<p>胡锦涛在“十七大”前，掌握了不少曾庆红家族贪腐的证据，最后在政治局用“七上八下”的中共党内潜规则逼退了曾庆红。</p>
<p>日媒报导说，当时的情况是江派属意的接班人薄熙来在党内投票中几乎位列最末，江和曾只能同意暂时让习近平“顶上去”。习近平是能让各派系都接受的人。</p>
<p>曾庆红在退下前还开出了条件。</p>
<p>曾庆红提出的其中一个条件是江派人马在政治局常委中占据大多数。大纪元获悉，其离任时还有一个苛刻的条件，那就是胡锦涛不得被称为“核心”。</p>
<p>江禁止媒体上出现“胡核心”的提法<br>报导说，当江泽民从总书记职务退下来之后，江禁止国内媒体上出现有关“以胡锦涛为核心的党中央”的提法。</p>
<p>到了胡锦涛掌权时，虽然地方官员偶尔喊出过“胡核心”，但大陆的官方报导中不再把最高领导人称作“核心”。而央级媒体也只有央视在“十七大”后提到过一次“胡核心”，此后便没有再出现过。</p>
<p>“以胡锦涛为总书记的党中央”成了中共标准提法。</p>
<p>据海外中文媒体报导，中共“十七大”后，港台媒体曾对“胡核心”有过一些报导和议论。如2008年初，香港《明报》一篇文章《“胡核心”已在正式场合被首次提出》 ，其中说到“胡锦涛的核心地位已在党内形成共识”。</p>
<p>不过，此说很快被否定。据称来自“中共高层”的看法是，中共“现在没有个人核心，只有集体领导”。当时还有评论指，“核心”的提法并不科学，违背了中共党内民主的原则，如果说提出的当时是受到历史条件的局限，那么现在这种局限已经不存在了。</p>
<p>与此同时，党媒却在胡掌权期间继续沿用“江核心”的说法。</p>
<p>了解中南海政情的消息来源表示，其实道理很简单，未确定“胡核心”，那是江泽民根本没有把权力真正交给胡锦涛。</p>
<p>分析：江泽民为何不把“核心”交给胡锦涛？<br>时事评论员李林一说，当年江泽民迫害法轮功，胡锦涛一直不愿为其背黑锅，在法轮功的问题上不愿意被其捆绑，而且江对胡锦涛一直都不信任，更怕把“核心”的地位交给他后，会受到清算。所以江处心积虑架空胡锦涛，使得当时的九个常委各管一摊，尽量分散胡的权力。这事实上也造成了周永康的政法委能独大，成为“第二权力中央”。</p>
<p>李林一说，很多报导都说到了薄熙来、周永康两人在江泽民和曾庆红授意下，试图政变，在“十八大”后夺取习近平的权力。江为什么要这么安排？薄熙来和习近平都是太子党，但区别在于薄手上有法轮功血债，而习没有。江就是为了在法轮功问题上不致于受到清算才这么做。</p>
<p>李林一表示，从这个意义上来说，胡锦涛没有“核心”称号，背后隐藏两个巨大秘密。一个是法轮功问题，另一个是政变问题。</p>
<p>二、各方抛弃江泽民 习近平试水“习核心”<br>2012年“十八大”，习近平上台后掀起反腐风暴。2013年下半年，抓捕“大老虎”周永康的呼声越来越强烈，江泽民也切身感受到了危机。随着曾庆红、江泽民及其家族的腐败丑闻和不利消息不断传出，江泽民不得不再想对策以求自保。</p>
<p>2013年底，江泽民通过海外媒体提出想给习近平“核心”的称号，交换条件是要保护江家的利益。不过，现在回头看，习近平不但没买他的帐，还抓捕了多名江的亲信，现在对江泽民家族成员的收网也正在进行之中。</p>
<p>江泽民放风 习近平不理<br>2013年底，海外与中共关系密切的媒体说，中共前党魁江泽民已打算确定习近平第五代领导的核心地位。</p>
<p>该报导当时引述北京消息源透露说，“江已跟数位元老打过招呼”，“想尽早确定习的核心地位”。不过，江泽民是有附加条件的，那就是要换取习近平对自己家族利益和江派人马的保护。</p>
<p>报导最后还称，习当然会照单全收，同时也会满足江泽民提出的附加条件。</p>
<p>果真如此吗？</p>
<p>在此后的日子里，习近平不但没买账，而且不断加速清洗江派人马，一百多只省部级以上“大老虎”已入笼，大多是江派的人。而且江泽民集团的核心人物，包括周永康、徐才厚和郭伯雄等均已落马，其中，徐才厚已死亡。现在习近平、王岐山的反腐军团兵临城下，江泽民家族成员已岌岌可危。</p>
<p>去年传军方教授踢江泽民下“核心”<br>去年7月有一条消息引起外界关注。</p>
<p>海外有报导说，2015年5月22日，中共国防大学教授马骏在一个讲座中语出惊人。据悉，马骏在一个为时3小时的讲座中说：“现在习近平出来，可谓恰逢其时，他是真正的第三代领导核心。”</p>
<p>据知，国防大学是中共培养高级将领的高校。马骏现为国防大学战略教研部教授、大校军衔、中国二战史研究会副会长。</p>
<p>一位资深新闻界人士表示，马骏的这个讲话，不仅加冕了习近平“核心”之位，更把江泽民直接踢下了第三代中共领导“核心”的位置。</p>
<p>多维：江泽民不是真正的“核心”<br>近日，多维网刊发名为“习核心确立 中国新强人的领袖之路”的文章，在提到江泽民时表示，在“六四”事件后上台的江泽民，可以说是制度因素下的产物，所以这也就决定了其即便有强有力的元老支持，充其量也只能成为过渡性人物，很难真正够得上核心之名。</p>
<p>多维的编辑总部在北京。而这种说法直接否定了“江核心”的地位。</p>
<p>更耐人寻味的是，多维在2月3日发表名为“再谈习近平核心地位的时代必然”的文章。文章特别提到，“习近平和这一届领导集体显然不是任何政治强人钦点的”，习近平在中共“内部选举”中成为最高“领导者”。</p>
<p>1月25日，官方微信公众号“学习小组”重发一篇曾发表于2015年1月29日的文章《习近平成为最高领导人绝非偶然》，作者赵德润。文章举例说明了习身上的一些特点，然后得出结论习近平成为“国家最高领导人，应该说不是偶然的”。</p>
<p>令外界关注的是，此文最早发表于2015年1月底，而就在此前后，与江泽民派系有密切联系的一些海外中文媒体，曾不断放风称习近平是江泽民“隔代立储”的。</p>
<p>港媒早前的评论表示，当年是中共政治老人们集体选择了习近平，而并不是江泽民。习对江反贪“打虎”，公事公办！</p>
<p>大陆和尚政治敏感性强？ 讲话跳过江泽民<br>网上近日流传一段视频，山西省太原市慈航净苑住持印广，在向数百弟子讲话时，提及了毛泽东、邓小平、胡锦涛和习近平，唯独缺少了江泽民。</p>
<p>东网的评论认为，印广对中共建政以来第一代的“毛核心”、第二代的“邓核心”、第四代的领导人胡锦涛，甚至连呼之欲出的“准核心”习近平都称赞了，唯独片言不提“江核心”。</p>
<p>评论还说，印广似与较早前全国约二十名地方诸侯，以“劝进”或“黄袍加身”的方式，希望中央确认习近平为领导“核心”的做法遥相呼应，隐隐造成一种“习核心”即将形成的风潮。</p>
<p>习近平试水“习核心”早有征兆<br>去年提出“习核心”论的马骏并非第一人。早在2014年9月，中办主任栗战书便开始重提邓小平的“核心论”，并不断抬高习近平。习近平试水“习核心”那时已现征兆。</p>
<p>中办的《秘书工作》杂志2014年第9期刊发了栗战书的一篇提及上述内容的文章，该文摘自栗战书7月1日对中办所有处级以上干部的讲话。9月29日，官媒人民网转载了这篇文章。</p>
<p>在讲话中，栗战书重提邓小平曾讲过的：“任何一个领导集体都要有一个核心，没有核心的领导是靠不住的。”同时，栗战书在文中多次提到习近平。</p>
<p>当时的分析认为，栗战书重提“核心论”，并在讲话中多次提及习近平，显得相当罕见。“核心”一词在习近平上台后还没有出现过，很可能是中共政治局主流的看法；习近平在中共内部的“核心”权威，显然是在清算江派的过程中树立的。</p>
<p>对于栗战书重提邓的“核心论”，《动向》杂志援引中共全国人大的高层判断说，此为“试水习核心”之举。</p>
<p>“习马会”栗战书罕见被授权通报<br>栗战书的讲话是否有举足轻重的作用？从一个侧面也可看出。</p>
<p>2015年11月7日，习近平和马英九以“两岸领导人”身份举行了历史性会面。当时台媒披露，“习马会”由北京方面主动提出，洽谈数周成行；习近平的三大幕僚王沪宁、栗战书及王毅出力不少。</p>
<p>据港媒报导，举世瞩目的“习马会”在中共高层系统内曾经被加密通报，当时是中办主任栗战书被习近平罕见授权，代表中共中央、中共国务院以及中共中央军委，向中共省部军一级通报。</p>
<p>多维网的分析认为，以“习马会”如此重大的事务，习近平直接授权栗战书出面通报，一方面显示了习对栗战书的充分信任；另一方面则显示习近平在中共内或在涉外领域已获得权威。</p>
<p>习拉开与其他常委“政治位差”<br>从习近平与其他政治局常委在地位上逐渐拉开距离，也可看出“习核心”之势渐成。</p>
<p>2016年1月7日，习近平召开政治局常委会，听取人大、国务院、政协、最高法院、最高检察院工作汇报，听取中央书记处工作报告。除了副国级的最高法院院长周强，最高检察院检察长曹建明，正国级的张德江、李克强、俞正声，以及作为中央书记处第一书记的刘云山，这四名常委也要向习近平汇报工作。</p>
<p>由“国级”的常委们集中汇报工作的报导近年来只出现过两次。类似的常委会在2015年1月16日首次召开。去年会议时，中央书记处并不在汇报之列。</p>
<p>自由亚洲电台发表胡少江的评论文章称，这两次看似寻常的政治局常委会实际上是中共最高政治格局变化的一个晴雨表。它表明习近平正在有意识地拉开他与其他政治局常委们的“政治位差”，更加突出他与其他常委之间的领导与被领导关系。</p>
<p>香港东网评论称，习近平的权力会进一步加强，与其他常委的距离会进一步拉开，有可能变成真正的“核心”。</p>
<p>分析：王岐山维护“习核心”<br>今年1月12日至14日，中纪委六次全会召开。1月15日，中纪委首次就纪委全会召开新闻发布会。有媒体提问，中纪委六次全会上把原来的程序改了，由习近平首先讲话，原来中纪委全会都是先由中纪委书记讲话。今年把顺序改了，安排和以前不一样，这个不同有什么信息可以透露吗？</p>
<p>中纪委副书记吴玉良回答时透露，这次全会调整了议程，先请习近平发表讲话，之后王岐山再做报告，这是中纪委常委会研究后请示高层决定的。吴玉良还表示，这看似是一个程序上的调整，实质上是反映了中纪委同习中央保持一致的政治态度。</p>
<p>时政评论员谢天奇表示，中纪委六次全会调整议程，随后新闻发布会公开强调此举是反映了中纪委同习中央保持一致的政治态度，表明王岐山正用实际行动维护习近平的“核心”地位，凸显王岐山与习近平的政治联盟。</p>
<p>发表“训词”“习核心”呼之欲出<br>2015年12月31日，习近平当局在八一大楼举行中共陆军领导机构、火箭军、战略支援部队成立大会。当时，习近平向三支部队授军旗还罕见发表“训词”。</p>
<p>习是中共建政后第二位致“训词”的领导人，毛曾在1952到1953年期间就军队建设发表五次“训词”。</p>
<p>除了毛以外，再有致训词的就是蒋介石。1927年7月7日，蒋介石在首任特别市市长黄郛地就职大会上发表“训词”。作为国民党军队的最高领导人和缔造者，曾多次训词。</p>
<p>发表“训词”的场合，一般是在新机构成立之初进行，显示领导人对这项工作的重视。</p>
<p>毛泽东后，中共第二代“核心”邓小平和第三代“核心”江泽民在任期间，都有新机构成立，比如1998年总装备部成立，但他们都没有致“训词”。“十六大”以后，新成立了总参战略规划部，胡锦涛也未致训词。</p>
<p>有消息人士对大纪元透露，总体而言，致训词体现的是领导人对军队的绝对权威。习近平发表“训词”，可见“习核心”已经呼之欲出。</p>
<p>分析：习近平跳过江泽民成“核心”释信号<br>中国问题专家李天笑博士说：“江泽民的这个核心，从形式来讲是邓小平当初定的，不是靠他自己的能力。”</p>
<p>“习近平的‘习核心’不是自封的、也不是人家钦定的，他是在打‘虎’、打江的反腐过程中所形成的，这跟原来形式上是不同的。这两个不是延续性的概念。”</p>
<p>时事评论员石久天说，习近平试水“习核心”，其实释放了一个很大的信号。“习核心”的说法根本是跳过了江泽民，第一次不是由此前的元老所指定，而是在现任高层内部形成的共识。</p>
<p>石久天说，“习核心”确立，“江核心”称号就必须被剥夺。因为中共不能有两个核心。现在，江泽民可能会有一种“无可奈何花落去”的感觉。</p>
<p>中共的五中全会召开之际，大陆国防部抛出国防部大学教授的文章，为在五中全会通报的军改方案进行吹风。图为在天安门广场巡逻的军人。（FRED DUFOUR/AFP/Getty Images)<br>中共的五中全会召开之际，大陆国防部抛出国防部大学教授的文章，为在五中全会通报的军改方案进行吹风。图为在天安门广场巡逻的军人。（FRED DUFOUR/AFP/Getty Images)<br>三、习核心六中全会出场？<br>1月31日，亲习近平阵营的消息人士牛泪在海外发表评论文章《习近平核心》。文章说，习近平核心地位已经在中共党内高层形成共识。如果不出意外，应该在今年两会，最迟不超“十九大”，当局就会正式确立“以习近平为核心”的领导地位。而总部设在北京的多维网发文称江泽民不是真正的“核心”，充其量也只能成为过渡性人物。</p>
<p>习近平或很快获得“核心”称号<br>大纪元获悉，习近平可能在今年下半年的六中全会前后正式拥有“核心”称号。</p>
<p>另一个消息源告诉大纪元说，中共政治局已经通过习近平为领导“核心”的决议。</p>
<p>牛泪认为，在过去十年，因为众所周知的非常特殊的原因，出现了“双核”运转机制，造成了高层内部以业务分工为基础的多核心化，形成了九常委制的分崩离析局面和几个各自为是的政治山头。其言外之意是，习近平有了“核心”称号后，这种局面将被打破。</p>
<p>时事评论员石久天分析认为，“习核心”的出现，必然标志“江核心”的下台，可能是当局为清算江泽民做准备。</p>
<p>十多省市书记提出“习核心”的说法<br>近期，大陆有十几个省、市书记先后公开提出“习核心”。有外媒报导，“习核心”的提出预示将有大事发生。</p>
<p>上个月11日，中共天津市代书记黄兴国、四川省委书记王东明率先喊出“习核心”。随后，广西、安徽、湖北、内蒙古、河北、辽宁、重庆、山东、江苏、海南、河南、贵州、西藏等省、市委书记纷纷表态，维护习近平“核心”。中国银行董事长田国立在中行的高层会议上，也两次喊出“习核心”。</p>
<p>此外，新成立的军方五大战区，海、陆、空、火箭军、战略支援部队五大军种，都喊出增强“核心意识”、要维护习近平的“权威”、听习的指挥等。</p>
<p>1月27日，中办主任、中央直属机关工委书记栗战书在中央直属机关会议上强调，要“增强核心意识”、“看齐意识”，与习近平保持“高度一致”。</p>
<p>中共中央直属机关是直接隶属于中共中央的部门，共有20多个，其中包括中办、中组部、中宣部、中央政法委、中央统战部、中联部、人民日报社、求是杂志社等。</p>
<p>继多名地方官员喊出“习核心”后，1月29日，习近平召开政治局会议，审议政治局常委会听取和研究人大、国务院、政协、最高法院、最高检察院党组工作汇报和中央书记处工作报告的综合情况报告。会议中强调要增强“核心意识”。同时，官媒高调报导习近平具有四大“核心能力”。</p>
<p>外界观察注意到，中共党报《人民日报》1月18日的头版文章中，“坚强领导核心”一词已经出现在标题里，被认为释放出明确的政治信号。</p>
<p>1月28日，海外网站的文章标题直指“中共官媒信号很明确 习近平拿走江泽民核心地位”。文中说，连续出现拥戴习接过“核心”地位的言论和文章，例如北京国防大学一教授公开宣称，习近平已成为中共事实上的“第三代核心”，近期又有“核心绝不可以缺位”，和“习近平已成为事实上的核心”的长篇文章。</p>
<p>各方解读“习核心”出现的意义<br>现居海外的学者、政治评论员章立凡表示，“习核心”这种提法，是采用地方诸侯劝进的方式，“目前政治生态很诡异，很明显是有人在看体制内外对‘习核心’的反应如何，有些地方大员表示拥戴，但也未必是真心的。”</p>
<p>“核心”在中共语境中，意味着个人最高权力的确认。章立凡认为，最近提出的“习核心”的说法，就是要加强他“一票否决”的地位，将来有可能出现这种情况。</p>
<p>大陆教授张鸣分析认为：核心就是“没有第二个人可以跟他抗衡”。</p>
<p>港媒《明报》2月4日报导称，习近平自“十八大”掌权后，权力覆盖各方。2月1日，习近平向新成立的五大战区授旗并发布训令，更体现其对军队的领导。</p>
<p>美国彭博社2月3日的报导认为，“习核心”的提出，暗示中共政治正在发生转变，中共近些年高级官员提拔的惯例或将被打破，中共“十九大”可能会有大事发生。</p>
<p>截至发稿，还有多省市没有出声提及“习核心”。时政评论员李林一表示，黑龙江、江苏省委书记很早就喊出来了，很可能是因为他们觉得自己很危险，有被拿下或退下的可能；在1月份有些没有出声的，反而是习信任的人，比如浙江夏宝龙、辽宁李希。因此，有些地方大员喊出“习核心”，但并不表示其是真心或值得信任。</p>
<p>时政评论员石久天分析认为，现在各个地方大员，连央企高层也先后喊出“习核心”，显示习近平成为“核心”指日可待，而江泽民将在未来失去“核心”的称号。所以当地方喊出“习核心”的时候，实际已经成为习江斗的一个分水岭。</p>
<p>习近平不断释放信号针对江泽民<br>2016年伊始，习近平在中纪委全会上宣布“反腐败斗争压倒性态势正在形成”，显示在与江泽民的决战中已占据优势，有足够自信。</p>
<p>此前的报导指，江泽民已经被习近平软禁。</p>
<p>同时，习近平新书出版，其批“太上皇”言论首度曝光，定性周永康、薄熙来等人“搞政治阴谋活动”等内部讲话也被公开。</p>
<p>此外，中纪委连发重磅文章，痛批有人“老子天下第一”，并称“有些政治上不能做的，做了就要付出代价”，反复强调反腐没有“丹书铁券”和“铁帽子王”，矛头都指向了江泽民政治集团。</p>
<p>时事评论员丁律开认为，从2015年初开始，习近平当局就不断地在释放信号，围剿江泽民家族和曾庆红家族，同时为中国大变局进行铺垫。 #</p>
<p>责任编辑：林锐</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>【大纪元2016年10月27日讯】编者按：中共十八届六中全会10月27日在北京闭幕，会议公报首次以“核心”形容习近平的领导，意味着习核心正式确立、习核心时代来临。下文是大纪元2016年2月16日发表的，关于江泽民、胡锦涛、习近平的“核心”之争以及“习核心”出台的内幕。此文并]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[创建Object的几种方式]]></title>
    <link href="http://fanlz.com/2015/11/28/create-object/"/>
    <id>http://fanlz.com/2015/11/28/create-object/</id>
    <published>2015-11-28T08:07:10.000Z</published>
    <updated>2015-11-28T08:17:46.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/2e6559acdcc93359f736ecfc54ce7523.jpg" alt=""><br>常用的创建对象的方法有工厂模式、构造函数模式、原型模式、组合使用构造函数模式和原型模式、动态原型模式、寄生构造函数模式、稳妥构造函数模式。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.工厂模式：解决了创建多个相似对象的问题，却没有解决对象识别的问题</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPerson</span>(<span class="params">name,age,job</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    o.name = name;</span><br><span class="line">    o.age = age;</span><br><span class="line">    o.job = job;</span><br><span class="line">    o.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person1 = createPerson(<span class="string">'fan'</span>,<span class="number">22</span>,<span class="string">'Software Engineer'</span>);</span><br><span class="line"><span class="keyword">var</span> person2 = createPerson(<span class="string">'lz'</span>,<span class="number">21</span>,<span class="string">'Teacher'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.构造函数模式: 可以将它的实例标识为一种特定的类型 instanceof,</span></span><br><span class="line"><span class="comment">//                每个方法都要在每个实例上重新创建一遍</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,job</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.job = job;</span><br><span class="line">    <span class="keyword">this</span>.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person(<span class="string">'fan'</span>,<span class="number">22</span>,<span class="string">'Software Engineer'</span>);</span><br><span class="line"><span class="keyword">var</span> person2 = <span class="keyword">new</span> Person(<span class="string">'lz'</span>,<span class="number">21</span>,<span class="string">'Teacher'</span>);</span><br><span class="line"><span class="comment">//使用new操作符经历的步骤；</span></span><br><span class="line"><span class="comment">// 1.创建一个新对象</span></span><br><span class="line"><span class="comment">// 2.将构造函数的作用域赋给新对象</span></span><br><span class="line"><span class="comment">// 3.执行构造函数中的代码（为新对象添加属性）</span></span><br><span class="line"><span class="comment">// 4.返回新对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3.原型模式  所有属性被实例共享，容易牵一发而动全身</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person.prototype.name = <span class="string">'fanlz'</span>;</span><br><span class="line">Person.prototype.age = <span class="number">22</span>;</span><br><span class="line">Person.prototype.job = <span class="string">'Software Engineer'</span>;</span><br><span class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();</span><br><span class="line">person1.sayName();  <span class="comment">//'fanlz'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person2 = <span class="keyword">new</span> Person();</span><br><span class="line">person2.sayName();  <span class="comment">//'fanlz'</span></span><br><span class="line"></span><br><span class="line">alert(person1.sayName == person2.sayName); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">alert(Person.prototype.isPrototypeOf(person1)); <span class="comment">//true</span></span><br><span class="line">alert(Person.prototype.isPrototypeOf(person2)); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">alert(<span class="built_in">Object</span>.getPrototypeOf(person1) == Person.prototype); <span class="comment">//true  ES5 返回[[Prototype]]的值</span></span><br><span class="line"></span><br><span class="line">alert(person1.hasOwnProperty(<span class="string">'name'</span>)); <span class="comment">//false 检测一个属性是存在与实例中还是原型中</span></span><br><span class="line"></span><br><span class="line">alert(<span class="built_in">Object</span>.keys(Person.prototype)) <span class="comment">// ES5 取得对象所有可枚举的实例属性</span></span><br><span class="line">alert(<span class="built_in">Object</span>.getOwnPtopertyNames(Person.prototype)) <span class="comment">//取得所有实例属性，不论是否可枚举</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//更简单的原型语法  相当于重写了它的prototype对象 constructor 不再指向Person</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    name:<span class="string">'fanlz'</span>,</span><br><span class="line">    age:<span class="number">22</span>,</span><br><span class="line">    job:<span class="string">'Software Engineer'</span>,</span><br><span class="line">    sayName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.组合使用构造函数模式和原型模式 (目前使用最广泛认同度最高的创建自定义类型的方法)</span></span><br><span class="line"><span class="comment">//所有实例属性在构造函数中定义，所有实例共享属性方法在原型中定义</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,job</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.job = job;</span><br><span class="line">    <span class="keyword">this</span>.friends = [<span class="string">'Shelby'</span>,<span class="string">'Court'</span>];</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    constructor: Person,</span><br><span class="line">    sayName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//5.动态原型模式</span></span><br><span class="line"><span class="comment">//所有信息封装在构造函数中，通过构造函数初始化原型</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,job</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.job = job;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="keyword">this</span>.sayName != <span class="string">'function'</span>) &#123;</span><br><span class="line">        Person.prototype.sayName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="keyword">this</span>.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//6.寄生构造函数模式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,job</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    o.name = name;</span><br><span class="line">    o.age = age;</span><br><span class="line">    o.job = job;</span><br><span class="line">    o.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> friend = <span class="keyword">new</span> Person(<span class="string">'fanlz'</span>,<span class="number">22</span>,<span class="string">'Software Engineer'</span>);</span><br><span class="line">friend.sayName(); <span class="comment">//'fanlz'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//7.稳妥构造函数模式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,job</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"></span><br><span class="line">    o.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参考文章：<a href="https://book.douban.com/subject/10546125/" target="_blank" rel="external">JavaScript高级程序设计</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/2e6559acdcc93359f736ecfc54ce7523.jpg" alt=""><br>常用的创建对象的方法有工厂模式、构造函数模式、原型模式、组合使用构造]]>
    </summary>
    
      <category term="javascript" scheme="http://fanlz.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[块级元素与行内元素]]></title>
    <link href="http://fanlz.com/2015/07/25/block-inline/"/>
    <id>http://fanlz.com/2015/07/25/block-inline/</id>
    <published>2015-07-25T08:10:10.000Z</published>
    <updated>2015-09-16T06:55:00.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/e7c53f5de79f1d025565d265eb377157.jpg" alt=""><br>对于前端新手来说，第一次对HTML排版感到困惑，可能是没有正确区分块级元素和行内元素，因为这两种元素与生俱来的特性是有一些区别的，常常导致很多样式不能出现理想的效果。通常从CSS样式来说，HTML元素可以简单的分为块级元素(block-level elements)和行内元素(inline elements)。</p>
<p>块级元素 一个块级元素大致有以下特性：</p>
<ul>
<li>如果没有设置宽度width，会自动伸展宽度撑满父级元素</li>
<li>可以设置margin/padding值</li>
<li>如果没有设置高度height，高度自动适应子元素的高度(假定没有浮动或定位)</li>
<li>默认情况下，会自动位于前一个元素的下面(假定没有浮动或定位)</li>
<li>忽略vertical-align 属性<br>所以对于一个块级元素来说，如果想要其撑满父级元素的宽度，不必要设置宽度。如果设置宽度可能还会导致其它问题。而且不必要用clear去清一个块级元素，假定没有浮动或定位的话，它会自动另起一行。</li>
</ul>
<p>行内元素  一个行内元素大致具有以下特性：</p>
<ul>
<li>随着文本内容流向排列</li>
<li>不会像块级元素一样另起一行</li>
<li>会忽略margin/padding的top和bottom值，应用left和right值</li>
<li>忽略设置的width/height属性</li>
<li>如果设置为向左或向右浮动(float)，则自动表现为块级元素具有块级元素特性</li>
<li>可以应用vertical-align 属性<br>标注：一般来说，块级元素可以包含块级元素或行内元素，行内元素中只能包含行内元素。但有一个例外是，a 元素可以包含任何元素。你也可以改变一个元素的表现为块或行元素通过display:block或者display:inline属性。另外除了块级元素和行内元素外，其实还有一种介于两者之间，具有两者特性的元素类型，那就是inline-block元素，它可以像行内元素一样流动排列，也具有块级元素的块级结构表现。</li>
</ul>
<p>如果你是刚开始学习CSS，弄清这两种元素间的区别将会帮助你在以后的样式控制中更得心应手，而不是过度使用浮动布局或其它糟糕的方式。</p>
<p>常用块级元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">address</span>&gt;</span>	定义地址</span><br><span class="line"><span class="tag">&lt;<span class="title">caption</span>&gt;</span>	定义表格标题</span><br><span class="line"><span class="tag">&lt;<span class="title">dd</span>&gt;</span>		定义列表中定义条目</span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span>		定义文档中的分区或节</span><br><span class="line"><span class="tag">&lt;<span class="title">dl</span>&gt;</span>		定义列表</span><br><span class="line"><span class="tag">&lt;<span class="title">dt</span>&gt;</span>		定义列表中的项目</span><br><span class="line"><span class="tag">&lt;<span class="title">form</span>&gt;</span>		创建 HTML 表单</span><br><span class="line"><span class="tag">&lt;<span class="title">h1</span>&gt;</span>~<span class="tag">&lt;<span class="title">h6</span>&gt;</span>	定义标题</span><br><span class="line"><span class="tag">&lt;<span class="title">hr</span>&gt;</span>		创建一条水平线</span><br><span class="line"><span class="tag">&lt;<span class="title">li</span>&gt;</span>		标签定义列表项目</span><br><span class="line"><span class="tag">&lt;<span class="title">ol</span>&gt;</span>		定义有序列表</span><br><span class="line"><span class="tag">&lt;<span class="title">ul</span>&gt;</span>		定义无序列表</span><br><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span>			标签定义段落</span><br><span class="line"><span class="tag">&lt;<span class="title">pre</span>&gt;</span>		定义预格式化的文本</span><br><span class="line"><span class="tag">&lt;<span class="title">table</span>&gt;</span>		标签定义 HTML 表格</span><br><span class="line"><span class="tag">&lt;<span class="title">tbody</span>&gt;</span>		标签表格主体（正文）</span><br><span class="line"><span class="tag">&lt;<span class="title">td</span>&gt;</span>		表格中的标准单元格</span><br><span class="line"><span class="tag">&lt;<span class="title">tfoot</span>&gt;</span>		定义表格的页脚（脚注或表注）</span><br><span class="line"><span class="tag">&lt;<span class="title">th</span>&gt;</span>		定义表头单元格</span><br><span class="line"><span class="tag">&lt;<span class="title">thead</span>&gt;</span>		标签定义表格的表头</span><br><span class="line"><span class="tag">&lt;<span class="title">tr</span>&gt;</span>		定义表格中的行</span><br></pre></td></tr></table></figure></p>
<p>常用行内元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">a</span>&gt;</span>			标签可定义锚</span><br><span class="line"><span class="tag">&lt;<span class="title">abbr</span>&gt;</span>		表示一个缩写形式</span><br><span class="line"><span class="tag">&lt;<span class="title">acronym</span>&gt;</span>	定义只取首字母缩写</span><br><span class="line"><span class="tag">&lt;<span class="title">b</span>&gt;</span>			字体加粗</span><br><span class="line"><span class="tag">&lt;<span class="title">br</span>&gt;</span>		换行</span><br><span class="line"><span class="tag">&lt;<span class="title">cite</span>&gt;</span>		引用进行定义</span><br><span class="line"><span class="tag">&lt;<span class="title">em</span>&gt;</span>		定义为强调的内容</span><br><span class="line"><span class="tag">&lt;<span class="title">i</span>&gt;</span>			斜体文本效果</span><br><span class="line"><span class="tag">&lt;<span class="title">img</span>&gt;</span>		向网页中嵌入一幅图像</span><br><span class="line"><span class="tag">&lt;<span class="title">input</span>&gt;</span>		输入框</span><br><span class="line"><span class="tag">&lt;<span class="title">label</span>&gt;</span>		标签为 input 元素定义标注（标记）</span><br><span class="line"><span class="tag">&lt;<span class="title">select</span>&gt;</span>	创建单选或多选菜单</span><br><span class="line"><span class="tag">&lt;<span class="title">small</span>&gt;</span>		呈现小号字体效果</span><br><span class="line"><span class="tag">&lt;<span class="title">span</span>&gt;</span>		组合文档中的行内元素</span><br><span class="line"><span class="tag">&lt;<span class="title">strong</span>&gt;</span>	语气更强的强调的内容</span><br><span class="line"><span class="tag">&lt;<span class="title">sub</span>&gt;</span>		定义下标文本</span><br><span class="line"><span class="tag">&lt;<span class="title">sup</span>&gt;</span>		定义上标文本</span><br><span class="line"><span class="tag">&lt;<span class="title">textarea</span>&gt;</span>	多行的文本输入控件</span><br></pre></td></tr></table></figure></p>
<p>参考文章：<a href="http://www.impressivewebs.com/difference-block-inline-css/" target="_blank" rel="external">The Difference Between “Block” and “Inline”</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/e7c53f5de79f1d025565d265eb377157.jpg" alt=""><br>对于前端新手来说，第一次对HTML排版感到困惑，可能是没有正确区分块]]>
    </summary>
    
      <category term="html" scheme="http://fanlz.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS选择器]]></title>
    <link href="http://fanlz.com/2015/07/24/css-selector/"/>
    <id>http://fanlz.com/2015/07/24/css-selector/</id>
    <published>2015-07-24T00:10:18.000Z</published>
    <updated>2015-08-31T12:42:46.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/6295e8ae1ac742cfa7c20a1b8b37c4fb.jpg" alt=""></p>
<p>CSS(层叠样式表)是一门控制文档以何种方式呈现的语言，它可以控制元素的宽高、边距、背景、字体的颜色、大小等等，用来为结构化文档(如HTML)添加样式。CSS用来将文档的结构和样式分离开来，使文档结构更清晰，可维护性强。应用CSS主要通过CSS选择器选中目标文档元素，并添加相应样式，可见CSS选择器的灵活使用是CSS的重点，下面介绍几种常用的CSS选择器以及他们的优先级。</p>
<p>常用选择器:</p>
<p>*  通用选择器<br>#id  id选择器<br>.class  class选择器<br>p 元素标签选择器<br>[title] 属性选择器<br>[title=value] 属性选择器<br>p span    后代选择器<br>h1&gt; strong 子元素选择器<br>h1 + p  相邻兄弟选择器<br>a:hover 伪类选择器<br>h1:after 伪元素选择器</p>
<p>应用实例：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">*<span class="rules">&#123;<span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span></span></span>;<span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">0</span></span></span>;&#125;</span></span><br><span class="line"><span class="id">#id</span><span class="rules">&#123;<span class="rule"><span class="attribute">backrgound</span>:<span class="value"><span class="hexcolor">#ccc</span></span></span>;&#125;</span></span><br><span class="line"><span class="class">.class</span><span class="rules">&#123;<span class="rule"><span class="attribute">font-weight</span>:<span class="value">bold&#125;</span><br><span class="line">p.class&#123;color:<span class="hexcolor">#000</span></span></span>;&#125;</span></span><br><span class="line"><span class="tag">h1</span><span class="rules">&#123;<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">20px</span></span></span>;&#125;</span></span><br><span class="line"><span class="tag">a</span><span class="attr_selector">[href]</span><span class="rules">&#123;<span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#000</span></span></span>;&#125;</span></span><br><span class="line"><span class="tag">input</span><span class="attr_selector">[type="text"]</span><span class="rules">&#123;<span class="rule"><span class="attribute">padding-left</span>:<span class="value"><span class="number">10px</span></span></span>;&#125;</span></span><br><span class="line"><span class="tag">p</span> <span class="tag">span</span><span class="rules">&#123;<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">12px</span></span></span>;&#125;</span></span><br><span class="line"><span class="tag">h1</span>&gt;<span class="tag">strong</span><span class="rules">&#123;<span class="rule"><span class="attribute">font-weight</span>:<span class="value">bold</span></span>;&#125;</span></span><br><span class="line"><span class="tag">h1</span>+<span class="tag">p</span><span class="rules">&#123;<span class="rule"><span class="attribute">margin-top</span>:<span class="value"><span class="number">10px</span></span></span>;&#125;</span></span><br><span class="line"><span class="rule"><span class="attribute">a</span>:<span class="value">hover&#123;color:<span class="hexcolor">#ccc</span></span></span>;&#125;</span><br><span class="line"><span class="tag">h1</span><span class="pseudo">:after</span><span class="rules">&#123;<span class="rule"><span class="attribute">content</span>:<span class="value"><span class="string">""</span>,display:block</span></span>;<span class="rule"><span class="attribute">clear</span>:<span class="value">both</span></span>;&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>选择器的优先级<br>我们知道，CSS很多样式是可以继承的，并且一般来说写在后面的样式会覆盖掉之前的样式，但是当我们写CSS的时候我们必须注意有些选择器在级联(cascade)上会高于其它选择器，我们写在最后面的选择器将不一定会覆盖前面我们写在同一个元素的样式，这就是不同选择器的优先级不同导致的，下面的列表的选择器优先级是逐级增加的：</p>
<ul>
<li>通用选择器（*）</li>
<li>元素(类型)选择器</li>
<li>类选择器</li>
<li>属性选择器</li>
<li>伪类</li>
<li>ID 选择器</li>
<li>内联样式</li>
</ul>
<p>另外，除了这些还有 !important 规则，当 !important 规则被应用在一个样式声明中时,该样式声明会覆盖CSS中任何其他的声明, 无论它处在声明列表中的哪里。但是要记得使用 !important 规则不是一个好习惯。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/6295e8ae1ac742cfa7c20a1b8b37c4fb.jpg" alt=""></p>
<p>CSS(层叠样式表)是一门控制文档以何种方式呈现的语言，它可]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS水平居中常用方法]]></title>
    <link href="http://fanlz.com/2015/07/21/horizontal-center/"/>
    <id>http://fanlz.com/2015/07/21/horizontal-center/</id>
    <published>2015-07-21T00:15:38.000Z</published>
    <updated>2015-09-01T14:03:38.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/6097959e8b2e499230f707807971096f.jpg" alt=""></p>
<h2 id="方法一">方法一</h2><p>平时我们用的最多的方法，通过确定元素的宽度，并且设定元素margin为auto，例如：</p>
<p></p><p data-height="182" data-theme-id="18430" data-slug-hash="jbOzPZ" data-default-tab="result" data-user="fanlz" class="codepen">See the Pen <a href="http://codepen.io/fanlz/pen/jbOzPZ/" target="_blank" rel="external">jbOzPZ</a> by fanlz (<a href="http://codepen.io/fanlz" target="_blank" rel="external">@fanlz</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><br>但是使用这种方法必须设定元素的宽度，但是很多时候我们不知道元素的宽度的，换句话说就是元素的宽度是不固定的，这时候应该怎么办呢？其实使用CSS水平居中的方式有多种，这里我们以简单的分页列表为例来说明居中的方式：</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/6097959e8b2e499230f707807971096f.jpg" alt=""></p>
<h2 id="方法一">方法一</h2><p>平时我们用的最多的]]>
    </summary>
    
      <category term="css" scheme="http://fanlz.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS垂直居中的几种方法]]></title>
    <link href="http://fanlz.com/2015/07/13/vertical-align-center/"/>
    <id>http://fanlz.com/2015/07/13/vertical-align-center/</id>
    <published>2015-07-13T00:15:28.000Z</published>
    <updated>2016-10-30T12:55:11.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/228a7d4c6bcf00c7e97d4d39abb632d4.jpg" alt=""></p>
<p>##方法一<br>把div的显示方式设置为表格，即可使用表格的vertical-align属性<br>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"cell"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span>content<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.wrapper</span><span class="rules">&#123;<span class="rule"><span class="attribute">display</span>:<span class="value">table</span></span>;&#125;</span></span><br><span class="line"><span class="class">.cell</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value">table-cell</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">vertical-align</span>:<span class="value">middle</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="优点:">优点:</h3><p>content 可以动态改变高度，当wrapper里没有足够空间时，content不会被截断</p>
<h3 id="缺点:">缺点:</h3><p>老的IE版本中无效，嵌套标签多</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://fanpic-img.stor.sinaapp.com/original/228a7d4c6bcf00c7e97d4d39abb632d4.jpg" alt=""></p>
<p>##方法一<br>把div的显示方式设置为表格，即可使用表格]]>
    </summary>
    
      <category term="css" scheme="http://fanlz.com/tags/css/"/>
    
  </entry>
  
</feed>
